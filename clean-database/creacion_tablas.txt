DROP TABLE SAK_UTL_REFERENCIAS CASCADE CONSTRAINTS;

CREATE TABLE SAK_UTL_REFERENCIAS
(
  TABLA         VARCHAR2(35 CHAR)               NOT NULL,
  TIPO          VARCHAR2(1 CHAR)                NOT NULL,
  CODIGO        VARCHAR2(100 CHAR)              NOT NULL,
  SITE_ORIGEN   VARCHAR2(100 CHAR)              NOT NULL,
  SITE_DESTINO  VARCHAR2(100 CHAR),
  URL           VARCHAR2(500 CHAR)              NOT NULL,
  RECURSO       VARCHAR2(2000 CHAR),
  EXISTE        VARCHAR2(1 CHAR)                DEFAULT 'S'                   NOT NULL,
  FECHA_ALTA    DATE
);

COMMENT ON COLUMN SAK_UTL_REFERENCIAS.SITE_ORIGEN IS 'Site donde esta el objeto explorado';

COMMENT ON COLUMN SAK_UTL_REFERENCIAS.SITE_DESTINO IS 'Site donde esta el objeto al que el objeto explorado hace referencia';

COMMENT ON COLUMN SAK_UTL_REFERENCIAS.FECHA_ALTA IS 'Fecha en la que se registra la referencia';



CREATE INDEX SAK_UTL_REFERENCIAS_I2 ON SAK_UTL_REFERENCIAS
(SITE_ORIGEN, SITE_DESTINO);


CREATE UNIQUE INDEX SAK_UTL_REFERENCIAS_PK ON SAK_UTL_REFERENCIAS
(TABLA, CODIGO, URL);


CREATE INDEX SAK_UTL_REFERENCIAS_I1 ON SAK_UTL_REFERENCIAS
(SITE_DESTINO);


DROP TABLE BORRAR_SITES_RESOURCES_FS CASCADE CONSTRAINTS;

CREATE TABLE BORRAR_SITES_RESOURCES_FS
(
  SITE_ID      VARCHAR2(64 CHAR)                NOT NULL,
  RESOURCE_ID  VARCHAR2(256 CHAR)               NOT NULL,
  FILE_PATH    VARCHAR2(256 CHAR)               NOT NULL,
  TIPO         VARCHAR2(1 CHAR),
  BORRADO      VARCHAR2(1 CHAR)                 DEFAULT 'N'                   NOT NULL
);

COMMENT ON COLUMN BORRAR_SITES_RESOURCES_FS.TIPO IS 'Tipo de recurso (C) content_resource (M) de sam_media_t';

COMMENT ON COLUMN BORRAR_SITES_RESOURCES_FS.BORRADO IS 'Indica si el recurso se ha borrado o no';


DROP TABLE BORRAR_SITES_LOG CASCADE CONSTRAINTS;

CREATE TABLE BORRAR_SITES_LOG
(
  SITE_ID   VARCHAR2(64 CHAR),
  DATETIME  VARCHAR2(40 CHAR),
  MESSAGE   VARCHAR2(255 CHAR)
);
